{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tuanh\\\\React Js\\\\project_1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // useEffect\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"\"); // [state, setState] = useState(\"\");\n\n  const weatherSelector = useSelector(state => state);\n  console.log(weatherSelector);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  const getWeatherInfor = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city);\n    }\n  };\n\n  let detailWeather = \"\";\n\n  if (weatherSelector.weatherinfor !== '') {\n    detailWeather = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weather Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"details\",\n      children: \" You need to choose state. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"REACT-REDUX WEATHER APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getWeatherInfor,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputState\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"inputState\",\n            className: \"form-control\",\n            value: city,\n            onChange: e => setCity(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), data.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val.id,\n                children: val.name\n              }, val.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-dark btn-sm\",\n        children: \"Check Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), detailWeather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h15bWPLF4A0AT2xcgGQHARZ1jqs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Tuanh/React Js/project_1/src/App.js"],"names":["React","useState","useSelector","useDispatch","fetchWeather","data","App","city","setCity","weatherSelector","state","console","log","dispatch","getWeatherInfoAction","getWeatherInfor","e","preventDefault","detailWeather","weatherinfor","target","value","map","val","id","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// useEffect\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n        // [state, setState] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state);\n  \n  console.log(weatherSelector);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));  \n\n  const getWeatherInfor = (e) => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city)\n    }\n\n  };\n\n  let detailWeather = \"\";\n\n  if (weatherSelector.weatherinfor !== '') {\n    detailWeather = (\n      <div className=\"details\">\n        <h3>Weather Details</h3>\n\n      </div>\n    )\n  } else {\n    <div className=\"details\"> You need to choose state. </div>\n  }\n  \n  return (\n    <div className=\"container\">\n      <h3><center>REACT-REDUX WEATHER APP</center></h3>\n      <br/>\n      <form onSubmit={getWeatherInfor}>\n        <div className=\"form-row\">\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"inputEmail4\">State</label>\n            <input type=\"text\" className=\"form-control\" \n                placeholder=\"Enter city name...\" \n                value={city} \n                onChange={e => setCity(e.target.value)} />\n          </div> */}\n          {/*  */}\n          <div className=\"form-group\">\n            <label htmlFor=\"inputState\">State</label>\n            <select id=\"inputState\" className=\"form-control\" value={city} onChange={e => setCity(e.target.value)}>\n              <option value=\"\">Choose State</option>\n              {\n                data.map(val => {\n                  return (\n                    <option value={val.id} key={val.id}>{val.name}</option>\n                  )\n                })\n              }\n            </select>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn-dark btn-sm\">Check Weather</button>\n        <br/>\n        { detailWeather }\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}