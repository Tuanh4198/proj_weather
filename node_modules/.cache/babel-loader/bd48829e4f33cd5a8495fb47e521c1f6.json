{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tuanh\\\\React Js\\\\project_1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // useEffect\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const weatherSelector = useSelector(state => state.weatherinfor);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  new Promise((resolve, reject) => {\n    console.log('Initial');\n    resolve();\n  }).then(() => {\n    throw new Error('Something failed');\n    console.log('Do this');\n  }).catch(() => {\n    console.log('Do that');\n  });\n\n  const getWeatherInfor = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city);\n      console.log(weatherSelector.weather);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"REACT-REDUX WEATHER APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getWeatherInfor,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail4\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter city name...\",\n            value: city,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-dark btn-sm\",\n        children: \"Check Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h15bWPLF4A0AT2xcgGQHARZ1jqs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Tuanh/React Js/project_1/src/App.js"],"names":["React","useState","useSelector","useDispatch","fetchWeather","App","city","setCity","weatherSelector","state","weatherinfor","dispatch","getWeatherInfoAction","Promise","resolve","reject","console","log","then","Error","catch","getWeatherInfor","e","preventDefault","weather","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,8BAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMO,eAAe,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAnC;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,oBAAoB,GAAIN,IAAD,IAAUK,QAAQ,CAACP,YAAY,CAACE,IAAD,CAAb,CAA/C;;AAEA,MAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAH,IAAAA,OAAO;AACV,GAJC,EAKDI,IALC,CAKI,MAAM;AACR,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GATC,EAUDG,KAVC,CAUK,MAAM;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAZC;;AAaA,QAAMI,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIjB,IAAI,KAAK,EAAb,EAAiB;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KAFD,MAEO;AACLL,MAAAA,oBAAoB,CAACN,IAAD,CAApB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYT,eAAe,CAACgB,OAA5B;AACD;AACF,GARD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,6BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEH,eAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AACI,YAAA,WAAW,EAAC,oBADhB;AAEI,YAAA,KAAK,EAAEf,IAFX;AAGI,YAAA,QAAQ,EAAEgB,CAAC,IAAIf,OAAO,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA3DQrB,G;UAGiBH,W,EAEPC,W;;;KALVE,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n// useEffect\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state.weatherinfor);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));  \n\n  new Promise((resolve, reject) => {\n    console.log('Initial');\n\n    resolve();\n})\n.then(() => {\n    throw new Error('Something failed');\n\n    console.log('Do this');\n})\n.catch(() => {\n    console.log('Do that');\n})\n  const getWeatherInfor = (e) => {\n    e.preventDefault();\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city)\n      console.log(weatherSelector.weather);\n    }\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <h3><center>REACT-REDUX WEATHER APP</center></h3>\n      <br/>\n      <form onSubmit={getWeatherInfor}>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"inputEmail4\">State</label>\n            <input type=\"text\" className=\"form-control\" \n                placeholder=\"Enter city name...\" \n                value={city} \n                onChange={e => setCity(e.target.value)} />\n          </div>\n          {/*  */}\n          {/* <div className=\"form-group col-md-4\">\n            <label htmlFor=\"inputState\">State</label>\n            <select id=\"inputState\" className=\"form-control\" value={city} >\n              <option selected>Choose...</option>\n              <option>...</option>\n            </select> */}\n          {/* </div> */}\n        </div>\n        {/*  */}\n        <button type=\"submit\" className=\"btn-dark btn-sm\">Check Weather</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}