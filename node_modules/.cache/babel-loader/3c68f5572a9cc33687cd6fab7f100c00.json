{"ast":null,"code":"var _jsxFileName = \"E:\\\\Tuanh\\\\React Js\\\\project_1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // useEffect\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"\"); // [state, setState] = useState(\"\");\n\n  const weatherSelector = useSelector(state => state.weatherinfor);\n  const dispatch = useDispatch();\n\n  const getWeatherInfoAction = city => dispatch(fetchWeather(city));\n\n  const getWeatherInfor = e => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      new Promise(() => {\n        getWeatherInfoAction(city);\n      }).then(() => {\n        console.log(weatherSelector.weather);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"REACT-REDUX WEATHER APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getWeatherInfor,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputState\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"inputState\",\n            className: \"form-control\",\n            value: city,\n            onChange: e => setCity(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              selected: true,\n              children: \"Choose State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), data.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val.id,\n                children: val.name\n              }, val.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-dark btn-sm\",\n        children: \"Check Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h15bWPLF4A0AT2xcgGQHARZ1jqs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Tuanh/React Js/project_1/src/App.js"],"names":["React","useState","useSelector","useDispatch","fetchWeather","data","App","city","setCity","weatherSelector","state","weatherinfor","dispatch","getWeatherInfoAction","getWeatherInfor","e","preventDefault","console","log","Promise","then","weather","catch","err","target","value","map","val","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CADa,CAEP;;AAEN,QAAMQ,eAAe,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAnC;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,oBAAoB,GAAIN,IAAD,IAAUK,QAAQ,CAACR,YAAY,CAACG,IAAD,CAAb,CAA/C;;AAEA,QAAMO,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KAFD,MAEO;AACL,UAAIC,OAAJ,CAAY,MAAM;AAChBN,QAAAA,oBAAoB,CAACN,IAAD,CAApB;AACD,OAFD,EAGCa,IAHD,CAGM,MAAM;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAYT,eAAe,CAACY,OAA5B;AACD,OALD,EAMCC,KAND,CAMOC,GAAG,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,OARD;AASD;AAEF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,6BAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAET,eAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BASE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,EAAE,EAAC,YAAX;AAAwB,YAAA,SAAS,EAAC,cAAlC;AAAiD,YAAA,KAAK,EAAEP,IAAxD;AAA8D,YAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV,CAApF;AAAA,oCACA;AAAQ,cAAA,KAAK,MAAb;AAAc,cAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAIIpB,IAAI,CAACqB,GAAL,CAASC,GAAG,IAAI;AACd,kCACE;AAAQ,gBAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA,0BAAqCD,GAAG,CAACE;AAAzC,iBAA4BF,GAAG,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA7DQtB,G;UAIiBJ,W,EAEPC,W;;;KANVG,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n// useEffect\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n        // [state, setState] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state.weatherinfor);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));  \n\n  const getWeatherInfor = (e) => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      new Promise(() => {\n        getWeatherInfoAction(city)\n      })\n      .then(() => {\n        console.log(weatherSelector.weather);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n\n  };\n  \n  return (\n    <div className=\"container\">\n      <h3><center>REACT-REDUX WEATHER APP</center></h3>\n      <br/>\n      <form onSubmit={getWeatherInfor}>\n        <div className=\"form-row\">\n          {/* <div className=\"form-group\">\n            <label htmlFor=\"inputEmail4\">State</label>\n            <input type=\"text\" className=\"form-control\" \n                placeholder=\"Enter city name...\" \n                value={city} \n                onChange={e => setCity(e.target.value)} />\n          </div> */}\n          {/*  */}\n          <div className=\"form-group\">\n            <label htmlFor=\"inputState\">State</label>\n            <select id=\"inputState\" className=\"form-control\" value={city} onChange={e => setCity(e.target.value)} >\n            <option value selected>Choose State</option>\n\n              {\n                data.map(val => {\n                  return (\n                    <option value={val.id} key={val.id}>{val.name}</option>\n                  )\n                })\n              }\n            </select>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn-dark btn-sm\">Check Weather</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}