[{"E:\\Tuanh\\React Js\\project_1\\src\\index.js":"1","E:\\Tuanh\\React Js\\project_1\\src\\App.js":"2","E:\\Tuanh\\React Js\\project_1\\src\\reportWebVitals.js":"3","E:\\Tuanh\\React Js\\project_1\\src\\redux\\store.js":"4","E:\\Tuanh\\React Js\\project_1\\src\\redux\\reducers\\weatherReducer.js":"5","E:\\Tuanh\\React Js\\project_1\\src\\redux\\actions\\fetchWeather.js":"6"},{"size":622,"mtime":1615476988146,"results":"7","hashOfConfig":"8"},{"size":3245,"mtime":1615814842789,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1613573920643,"results":"10","hashOfConfig":"8"},{"size":284,"mtime":1615471299979,"results":"11","hashOfConfig":"8"},{"size":225,"mtime":1615560677621,"results":"12","hashOfConfig":"8"},{"size":494,"mtime":1615644114039,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"x2u9km",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"E:\\Tuanh\\React Js\\project_1\\src\\index.js",[],["28","29"],"E:\\Tuanh\\React Js\\project_1\\src\\App.js",["30"],"import React, { useState,useEffect } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state.weatherinfor);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n  \n  useEffect(() => {\n    getWeatherInfoAction(\"1581129\")\n  }, [])\n\n  const getWeatherInfor = (e) => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city)\n    }\n\n  };\n\n  let detailWeather = \"\";\n\n  if (weatherSelector.name) {\n    detailWeather = (\n<div className=\"container\">\n  <div className=\"weather-side\">\n    <div className=\"weather-gradient\" />\n    <div className=\"date-container\">\n      <strong className=\"location\">{weatherSelector.name}, {weatherSelector.sys.country}</strong>\n    </div>\n    <div className=\"weather-container\">\n      <h3 className=\"weather-temp\">{(weatherSelector.main.temp/13.2).toFixed(2)  }Â°C</h3>\n    </div>\n    <div className=\"info-side\">\n      <div className=\"today-info-container\">\n        <div className=\"today-info\">\n          <div className=\"precipitation\"> \n            <span className=\"title\">CLOUDS</span><span className=\"value\">{weatherSelector.clouds.all} %</span>\n            <div className=\"clear\" />\n          </div>\n          <div className=\"humidity\"> \n            <span className=\"title\">HUMIDITY</span><span className=\"value\">{weatherSelector.main.humidity} %</span>\n            <div className=\"clear\" />\n          </div>\n          <div className=\"wind\"> \n            <span className=\"title\">WIND</span><span className=\"value\">{weatherSelector.wind.speed} km/h - {weatherSelector.wind.deg} Deg</span>\n            <div className=\"clear\"/>\n          </div>\n          <div className=\"wind\"> \n            <span className=\"title\">VISIBILITY</span><span className=\"value\">{weatherSelector.visibility} m</span>\n            <div className=\"clear\"/>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n    )\n  } else {\n    <div className=\"details\"> You need to choose state. </div>\n  }\n  \n  return (\n    <div className=\"App\">\n      <h3 className=\"text-white\"><center>REACT-REDUX WEATHER APP</center></h3>\n      <br/>\n      <form onSubmit={getWeatherInfor}>\n        <div className=\"form-row\">\n          <div className=\"btn-group col-12 justify-content-between align-items-center\">\n            <select id=\"inputState\" className=\"form-control col-7 bg-dark text-white\" value={city} onChange={e => setCity(e.target.value)}>\n              <option value=\"\">Choose State</option>\n              {\n                data.map(val => {\n                  return (\n                    <option value={val.id} key={val.id}>{val.name}</option>\n                  )\n                })\n              }\n            </select>\n            <button type=\"submit\" className=\"btn-dark col-4 btn-md location-button\" >Check</button>\n          </div>\n        </div>\n      </form>\n\n      <br/>\n      <br/>\n      \n      { detailWeather }\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Tuanh\\React Js\\project_1\\src\\reportWebVitals.js",[],"E:\\Tuanh\\React Js\\project_1\\src\\redux\\store.js",[],"E:\\Tuanh\\React Js\\project_1\\src\\redux\\reducers\\weatherReducer.js",[],"E:\\Tuanh\\React Js\\project_1\\src\\redux\\actions\\fetchWeather.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":17,"column":6,"nodeType":"37","endLine":17,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherInfoAction'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getWeatherInfoAction]",{"range":"44","text":"45"},[520,522],"[getWeatherInfoAction]"]